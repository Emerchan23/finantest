# Docker Compose para Ubuntu Server - ERP-BR
# Configuração otimizada para produção

version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: erp-br-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ./backend/data:/app/data
      - backend_logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=8001
      - DB_PATH=/app/data/erp.sqlite
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp-br-frontend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8001
    networks:
      - erp-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: erp-br-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - erp-network
    depends_on:
      - frontend
      - backend
    profiles:
      - nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Watchtower para atualizações automáticas (opcional)
  watchtower:
    image: containrrr/watchtower
    container_name: erp-br-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    profiles:
      - watchtower
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Backup automático (opcional)
  backup:
    image: alpine:latest
    container_name: erp-br-backup
    restart: "no"
    volumes:
      - ./backend/data:/data:ro
      - ./backups:/backups
    command: >
      sh -c '
        apk add --no-cache sqlite &&
        mkdir -p /backups &&
        sqlite3 /data/erp.sqlite ".backup /backups/erp-backup-$$(date +%Y%m%d-%H%M%S).sqlite" &&
        find /backups -name "erp-backup-*.sqlite" -mtime +7 -delete &&
        echo "Backup concluído: $$(date)"
      '
    profiles:
      - backup

volumes:
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  erp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16